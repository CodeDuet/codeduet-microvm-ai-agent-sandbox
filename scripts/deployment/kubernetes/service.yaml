apiVersion: v1
kind: Service
metadata:
  name: microvm-api
  namespace: microvm-sandbox
  labels:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: microvm-api
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: microvm-api

---
apiVersion: v1
kind: Service
metadata:
  name: microvm-api-headless
  namespace: microvm-sandbox
  labels:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: microvm-api
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: microvm-api

---
apiVersion: v1
kind: Service
metadata:
  name: microvm-api-external
  namespace: microvm-sandbox
  labels:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: microvm-api-external
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: microvm-api
  loadBalancerSourceRanges:
    - 0.0.0.0/0

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microvm-api-ingress
  namespace: microvm-sandbox
  labels:
    app.kubernetes.io/name: microvm-sandbox
    app.kubernetes.io/component: api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
    - hosts:
        - microvm.example.com
        - api.microvm.example.com
      secretName: microvm-tls
  rules:
    - host: microvm.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: microvm-api
                port:
                  number: 8000
    - host: api.microvm.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: microvm-api
                port:
                  number: 8000